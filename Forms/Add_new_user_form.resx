<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABwAA
        ABEAAAAWAAAAFAAAAAwAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAcAAAAeAAAAOQAAAEMAAAA+AAAALQAAABQAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACwAAABIAAAAVAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAIkUyC1a2ghn9vIcf/8yVLf+ccBu2AAAAMgAAABUAAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAAABkAAAAtAAAAOgAAAEEAAABDAAAAQwAA
        AEMAAABDAAAAQwAAAEMAAABItoMX+OvLiv/kqkn/56pI/96iPf+jdhvBAAAANgAAABsAAAAHAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAeIREDR4lECbaYSwjdpE8H/6RO
        Bv+kTgb/pE4G/6ROBv+kTgb/o0wF/6RPBf/Ln0L//+Gv/+WsTf/kq0v/5apI/96jPf+mdxrPHA4CRgAA
        AB4AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEYkCFCrVQ7/vnIv/9CJ
        Sv/dnV//4KJk/+ChY//goWP/4KFj/+ChY//goWP/4J9j/8OTL///6ML/67hl/+SsTv/kq0z/5apI/9ui
        O/+ydhj/QiEHUwAAABcAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWq1sV7cyJ
        Sv/jp23/3p5f/92aWf/cmFf/3JhX/9yYV//cmFf/3JhX/92YV//dmFj/w4gs/+bAf///4rj/57JZ/+Wt
        T//lq0z/5qtI/9WdNv+wdxjrAAAALwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABayYBf/5rSF/+KhYP/gn1//4J9f/+CfX//gn1//4J9f/+CfX//gn1//4J9f/+GfYP/inmH/wYgo/+W/
        fv//37L/5a9S/+WtUP/lq0z/56tJ/9edNf+qeBLAAAAAHgAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFr91Mf/pvJL/46Zl/+OmZ//jpmf/46Zn/+OmZ//jpmf/46Zn/+OmZ//jpmb/46Zn/+Sm
        aP/lpmn/woor/+W/f//71Z7/5a9U/+WuUf/nrU7/36M7/7CAIv8AAAA6AAAAIAAAABYAAAAWAAAAFAAA
        AA0AAAAEAAAAAAAAAAAAAAAWxoA//+vFoP/nrGv/561t/+etbv/nrW7/561u/+etbv/nrGz/56tp/+eq
        aP/nq2r/561t/+itb//prnH/xI0t/+a/gP/1y4r/6LFX/+iuT/+7gQ3/sqWP/2trbekAAABIAAAAQwAA
        AEMAAAA/AAAAMQAAABoAAAAIAAAAAQAAABbKhUb/7s6x/+uzc//rtHX/67R2/+u0dv/rtHb/67N0/+ux
        cP/rvIb/7e7u/+q7hf/rsnD/67R1/+y1eP/ttnr/xY8x/+fBgv/uvW7/w4kZ/7+th/+3t73/t7a3/3h2
        dP+Jh4X/jYqJ/4eFg/9mY2LEFhYWRwAAAB8AAAAHAAAAFdCNT//x2MD/8Ll4/++6fP/vu37/77t+/++7
        ff/vuXn/78KL//Hz9P/t8vP/6Ovq/+6/if/wuXn/77t9//C8gP/yvYP/yZM0/65+G/+4rpn/7vH4/8TC
        w/+3tLP/wsC+/8zKyf/S0M//2djW/9PR0P+ZlZT/MjEwUAAAABAAAAAOzII7//bj0//y0rD/8sCA//LB
        g//ywYT/8sCB//LAgv/29PD/8/X1/+/v7f/q7Ov/5efl//TAgv/zwYL/8sKE//PChf/2w4X/+de1/6ih
        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
        H//wAB//8AAf//AAH//4AD//+AA///4A//8=
</value>
  </data>
</root>